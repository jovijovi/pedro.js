version: '3.1'

networks:
  devenv-network-pedrojs:

volumes:
  dgraph:
    driver: local

services:
  redis:
    container_name: devenv_redis_pedrojs
    image: redis:6
    command: redis-server
    restart: 'no'
    ports:
      - "6379:6379"
    networks:
      - devenv-network-pedrojs

  mysql:
    container_name: devenv_mysql_pedrojs
    image: mysql:8.0.30
    command: --default-authentication-plugin=mysql_native_password
    restart: 'no'
    environment:
      MYSQL_ROOT_PASSWORD: example
    volumes:
      - ../.data/mysql_data:/var/lib/mysql
      - ./init/mysql/schema.sql:/docker-entrypoint-initdb.d/1_schema.sql
      - ./init/mysql/table.sql:/docker-entrypoint-initdb.d/2_table.sql
    ports:
      - "3306:3306"
    networks:
      - devenv-network-pedrojs

  postgres:
    container_name: devenv_postgres_pedrojs
    image: postgres:13.8
    restart: 'no'
    environment:
      POSTGRES_PASSWORD: example
    volumes:
      - ../.data/postgres_data:/var/lib/postgresql/data
      - ./init/postgres/database.sql:/docker-entrypoint-initdb.d/1_database.sql
      - ./init/postgres/table.sql:/docker-entrypoint-initdb.d/2_table.sql
    ports:
      - "5432:5432"
    networks:
      - devenv-network-pedrojs

  mongo:
    container_name: devenv_mongodb_pedrojs
    image: mongo:5.0.14
    command: --auth
    restart: 'no'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: test
    volumes:
      - ../.data/mongodb_data:/data/db
      - ./init/mongodb/user.js:/docker-entrypoint-initdb.d/1_user.js
    ports:
      - "27017:27017"
    networks:
      - devenv-network-pedrojs

  minio1:
    container_name: devenv_minio_1_pedrojs
    image: minio/minio:latest
    restart: 'no'
    volumes:
      - ../.data/minio/data1-1:/data1
      - ../.data/minio/data1-2:/data2
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server http://minio{1...4}/data{1...2} --console-address ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - devenv-network-pedrojs

  minio2:
    container_name: devenv_minio_2_pedrojs
    image: minio/minio:latest
    restart: 'no'
    volumes:
      - ../.data/minio/data2-1:/data1
      - ../.data/minio/data2-2:/data2
    ports:
      - "9002:9002"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server http://minio{1...4}/data{1...2} --console-address ":9002"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - devenv-network-pedrojs

  minio3:
    container_name: devenv_minio_3_pedrojs
    image: minio/minio:latest
    restart: 'no'
    volumes:
      - ../.data/minio/data3-1:/data1
      - ../.data/minio/data3-2:/data2
    ports:
      - "9003:9003"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server http://minio{1...4}/data{1...2} --console-address ":9003"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - devenv-network-pedrojs

  minio4:
    container_name: devenv_minio_4_pedrojs
    image: minio/minio:latest
    restart: 'no'
    volumes:
      - ../.data/minio/data4-1:/data1
      - ../.data/minio/data4-2:/data2
    ports:
      - "9004:9004"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server http://minio{1...4}/data{1...2} --console-address ":9004"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - devenv-network-pedrojs

  dgraph-zero:
    container_name: devenv_dgraph_zero_pedrojs
    image: dgraph/dgraph:latest
    restart: 'no'
    command: dgraph zero --my=dgraph-zero:5080
    environment:
      # FOR TEST ONLY
      DGRAPH_ALPHA_SECURITY: 'whitelist=0.0.0.0/0'
    volumes:
      - ../.data/dgraph/zero:/dgraph
    ports:
      - "5080:5080"
      - "6080:6080"
    networks:
      - devenv-network-pedrojs

  dgraph-alpha1:
    container_name: devenv_dgraph_alpha1_pedrojs
    image: dgraph/dgraph:latest
    restart: 'no'
    command: dgraph alpha --my=dgraph-alpha1:7080 --zero=dgraph-zero:5080
    environment:
      # FOR TEST ONLY
      DGRAPH_ALPHA_SECURITY: 'whitelist=0.0.0.0/0'
    volumes:
      - ../.data/dgraph/alpha1:/dgraph
    ports:
      - "8080:8080"
      - "9080:9080"
    networks:
      - devenv-network-pedrojs
    depends_on:
      - dgraph-zero

  dgraph-alpha2:
    container_name: devenv_dgraph_alpha2_pedrojs
    image: dgraph/dgraph:latest
    restart: 'no'
    command: dgraph alpha --my=dgraph-alpha2:7080 --zero=dgraph-zero:5080
    environment:
      # FOR TEST ONLY
      DGRAPH_ALPHA_SECURITY: 'whitelist=0.0.0.0/0'
    volumes:
      - ../.data/dgraph/alpha2:/dgraph
    ports:
      - "8082:8080"
      - "9082:9080"
    networks:
      - devenv-network-pedrojs
    depends_on:
      - dgraph-zero
      - dgraph-alpha1

  dgraph-alpha3:
    container_name: devenv_dgraph_alpha3_pedrojs
    image: dgraph/dgraph:latest
    restart: 'no'
    command: dgraph alpha --my=dgraph-alpha3:7080 --zero=dgraph-zero:5080
    environment:
      # FOR TEST ONLY
      DGRAPH_ALPHA_SECURITY: 'whitelist=0.0.0.0/0'
    volumes:
      - ../.data/dgraph/alpha3:/dgraph
    ports:
      - "8083:8080"
      - "9083:9080"
    networks:
      - devenv-network-pedrojs
    depends_on:
      - dgraph-zero
      - dgraph-alpha1
      - dgraph-alpha2

  dgraph-ratel:
    container_name: devenv_dgraph_ratel_pedrojs
    image: dgraph/ratel:latest
    restart: 'no'
    ports:
      - "8000:8000"
    networks:
      - devenv-network-pedrojs
    depends_on:
      - dgraph-zero

  jaegertracing-all-in-one:
    container_name: devenv_jaegertracing_all_in_one_pedrojs
    image: jaegertracing/all-in-one:latest
    restart: 'no'
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    networks:
      - devenv-network-pedrojs

  go-ipfs:
    container_name: devenv_go_ipfs_pedrojs
    image: ipfs/go-ipfs:latest
    restart: 'no'
    volumes:
      - ../.data/go-ipfs/export:/export
      - ../.data/go-ipfs/data:/data/ipfs
    ports:
      - "4001:4001"
      - "4001:4001/udp"
      - "8180:8080"
      - "5001:5001"
    networks:
      - devenv-network-pedrojs
